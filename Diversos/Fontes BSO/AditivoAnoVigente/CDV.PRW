#Include "PROTHEUS.CH" 




















User function CDVGCORP()
local AAREASX3 := SX3->(GETAREA())
local ASM0 := ADMABRESM0()

private AARQUPD := {}
private AREOPEN := {}


TCInternal(5,"*OFF")


CMENS := "Atenção"+CHR(13)+CHR(10)+iif((CPAISLOC) $ ("ANG|PTG"),"Este procedimento actualizará os dicionários de dados","Esta rotina ira atualizar os dicionarios de dados")+CHR(13)+CHR(10)+iif((CPAISLOC) $ ("ANG|PTG"),"para a utilização de gestão corporativa no RNCDV.","para a utilizacao de gestão corporativa no RNCDV.")+CHR(13)+CHR(10)+iif((CPAISLOC) $ ("ANG|PTG"),"Não devem existir utilizadores a usar o sistema durante a actualização.","Nao deve existir usuarios utilizando o sistema durante a atualizacao!")

if AVISO(iif((CPAISLOC) $ ("ANG|PTG"),"Actualização de Dados V.","Atualizacao de Dados V.")+" "+"01/04/2011",CMENS,{"OK","Cancela"},3)==1

    PROCESSA({|LEND|CDVPROC(@LEND)},iif((CPAISLOC) $ ("ANG|PTG"),"A processar","Processando"),iif((CPAISLOC) $ ("ANG|PTG"),"Aguarde... A verificar ficheiros...","Aguarde... Verificando arquivos..."), .F. )
endif

RESTAREA(AAREASX3)
return 















static function CDVPROC(LEND)
local CTEXTO := ""
local CFILE := ""
local CMASK := iif((CPAISLOC) $ ("ANG|PTG"),"Ficheiros de Texto","Arquivos de Texto")+" (*.txt)|*.txt|"
local NX := 0
local NINC := 0
local ASM0 := ADMABRESM0()

PROCREGUA(1)
INCPROC(iif((CPAISLOC) $ ("ANG|PTG"),"A verificar integridade dos dicionários...","Verificando integridade dos dicionarios..."))

for NINC := 1 to ( len(ASM0)) step 1
    RPCSETTYPE(3)
    RPCSETENV(ASM0[NINC][1],ASM0[NINC][2])

    RPCCLEARENV()
    CDVOPENSM0( .F. )
next

for NINC := 1 to ( len(ASM0)) step 1
    RPCSETTYPE(3)
    RPCSETENV(ASM0[NINC][1],ASM0[NINC][2])

    CTEXTO += "--------------------------------------------------------------------------------------------------------------------------------"+CHR(13)+CHR(10)
    CTEXTO += "Empresa"+": "+ASM0[NINC][1]+" "+"Filial"+": "+ASM0[NINC][2]+"-"+ASM0[NINC][6]+CHR(13)+CHR(10)


    INCPROC(iif((CPAISLOC) $ ("ANG|PTG"),"A analisar dicionário de dados...","Analisando Dicionario de Dados..."))
    CTEXTO += CDVATUSX3()

    __SETX31MODE( .F. )
    for NX := 1 to ( len(AARQUPD)) step 1
        INCPROC(iif((CPAISLOC) $ ("ANG|PTG"),"A actualizar estruturas. Aguarde... ","Atualizando estruturas. Aguarde... ")+CHR(13)+CHR(10)+AARQUPD[NX])
        if select(AARQUPD[NX])>0
            dbselectarea(AARQUPD[NX])
            dbclosearea()
        endif
        X31UPDTABLE(AARQUPD[NX])
        if __GETX31ERROR()
            ALERT(__GETX31TRACE())
            AVISO("Atenção",iif((CPAISLOC) $ ("ANG|PTG"),"Ocorreu um erro desconhecido durante a actualização da tabela","Ocorreu um erro desconhecido durante a atualizacao da tabela")+": "+AARQUPD[NX]+". "+iif((CPAISLOC) $ ("ANG|PTG"),"Verifique a integridade do dicionário e da tabela.","Verifique a integridade do dicionario e da tabela."),{"Continuar"},2)
            CTEXTO += iif((CPAISLOC) $ ("ANG|PTG"),"Ocorreu um erro desconhecido durante a actualização da estrutura da tabela","Ocorreu um erro desconhecido durante a atualizacao da estrutura da tabela")+": "+AARQUPD[NX]+CHR(13)+CHR(10)
        endif
    next

    RPCCLEARENV()
    CDVOPENSM0( .F. )
next

RPCSETENV(ASM0[1][1],ASM0[1][2],,,,,{"AE1"})

CTEXTO := iif((CPAISLOC) $ ("ANG|PTG"),"Log da actualização","Log da atualizacao")+" - "+"01/04/2011"+CHR(13)+CHR(10)+CTEXTO
__CFILELOG := memowrite(CRIATRAB(, .F. )+".log",CTEXTO)
OFONT := TFONT():NEW("Courier New",8,15, .F. ,,,,,,,,,,,,)
ODLG := MSDIALOG():NEW(3,0,340,417,iif((CPAISLOC) $ ("ANG|PTG"),"Actualização concluída.","Atualizacao concluida."),,, .F. ,,,,,, .T. ,,, .F. )
OMEMO := TMULTIGET():NEW(5,5,{ | U |iif(pcount()==0,CTEXTO,CTEXTO := U)},ODLG,200,145,, .F. ,,,, .T. ,, .F. ,, .F. , .F. , .T. ,,, .F. ,,)
OMEMO:BRCLICKED := { ||AllwaysTrue()}
OMEMO:OFONT := OFONT

PIXEL := SBUTTON():NEW(153,175,1,{ ||ODLG:END()},ODLG, .T. ,,)
PIXEL := SBUTTON():NEW(153,145,13,{ ||CFILE := cGetFile(CMASK,""), iif(CFILE="", .T. ,memowrite(CFILE,CTEXTO))},ODLG, .T. ,,)

ODLG:ACTIVATE(ODLG:BLCLICKED,ODLG:BMOVED,ODLG:BPAINTED, .T. ,,,,ODLG:BRCLICKED,)

return  .T. 














static function CDVATUSX3()
local LSX3 :=  .F. 
local CTEXTO := ""
local CALIAS := ""
local NTAMFILIAL := iif(LFWCODFIL,iif(FindFunction("FWSIZEFILIAL"),FWSIZEFILIAL(),2),2)

if CDVX3FIELD("LDY_FILIAL","X3_TAMANHO",GETTAMSXG("033",NTAMFILIAL)[1])
    LSX3 :=  .T. 
    CALIAS += "/LDY"
    aadd(AARQUPD,"LDY")
endif

if CDVX3FIELD("LHP_FILIAL","X3_TAMANHO",GETTAMSXG("033",NTAMFILIAL)[1])
    LSX3 :=  .T. 
    CALIAS += "/LHP"
    aadd(AARQUPD,"LHP")
endif

if CDVX3FIELD("LHQ_FILIAL","X3_TAMANHO",GETTAMSXG("033",NTAMFILIAL)[1])
    LSX3 :=  .T. 
    CALIAS += "/LHQ"
    aadd(AARQUPD,"LHQ")
endif

if CDVX3FIELD("LHR_FILIAL","X3_TAMANHO",GETTAMSXG("033",NTAMFILIAL)[1])
    LSX3 :=  .T. 
    CALIAS += "/LHR"
    aadd(AARQUPD,"LHR")
endif

if CDVX3FIELD("LHS_FILIAL","X3_TAMANHO",GETTAMSXG("033",NTAMFILIAL)[1])
    LSX3 :=  .T. 
    CALIAS += "/LHS"
    aadd(AARQUPD,"LHS")
endif

if CDVX3FIELD("LHT_FILIAL","X3_TAMANHO",GETTAMSXG("033",NTAMFILIAL)[1])
    LSX3 :=  .T. 
    CALIAS += "/LHT"
    aadd(AARQUPD,"LHT")
endif

if CDVX3FIELD("LJ3_FILIAL","X3_TAMANHO",GETTAMSXG("033",NTAMFILIAL)[1])
    LSX3 :=  .T. 
    CALIAS += "/LJ3"
    aadd(AARQUPD,"LJ3")
endif

if CDVX3FIELD("LJ8_FILIAL","X3_TAMANHO",GETTAMSXG("033",NTAMFILIAL)[1])
    LSX3 :=  .T. 
    CALIAS += "/LJ8"
    aadd(AARQUPD,"LJ8")
endif

if CDVX3FIELD("LJH_FILIAL","X3_TAMANHO",GETTAMSXG("033",NTAMFILIAL)[1])
    LSX3 :=  .T. 
    CALIAS += "/LJH"
    aadd(AARQUPD,"LJH")
endif

if CDVX3FIELD("LJI_FILIAL","X3_TAMANHO",GETTAMSXG("033",NTAMFILIAL)[1])
    LSX3 :=  .T. 
    CALIAS += "/LJI"
    aadd(AARQUPD,"LJI")
endif

if CDVX3FIELD("LJJ_FILIAL","X3_TAMANHO",GETTAMSXG("033",NTAMFILIAL)[1])
    LSX3 :=  .T. 
    CALIAS += "/LJJ"
    aadd(AARQUPD,"LJJ")
endif

if CDVX3FIELD("LJL_FILIAL","X3_TAMANHO",GETTAMSXG("033",NTAMFILIAL)[1])
    LSX3 :=  .T. 
    CALIAS += "/LJL"
    aadd(AARQUPD,"LJL")
endif

PROCREGUA( len(CALIAS))

if LSX3
    CTEXTO := iif((CPAISLOC) $ ("ANG|PTG"),"Tabelas actualizadas:","Tabelas atualizadas:")+" "+CALIAS+CHR(13)+CHR(10)
endif

return CTEXTO













User function UPDRNCDV()

CARQEMP := "SigaMat.Emp"
NMODULO := 6
__CINTERNET := NIL

private AARQUPD := {}
private AREOPEN := {}
private __LPYME :=  .F. 


TCInternal(5,"*OFF")


set(11,"ON")

CDVOPENSM0( .T. )
dbgotop()

LHISTORICO := iif(FindFunction("APMsgYesNo"),APMSGYESNO(iif((CPAISLOC) $ ("ANG|PTG"),"Deseja efectuar a actualização do Dicionário ","Deseja efetuar a atualizacao do Dicionario ")+"v. "+"01/04/2011"+"? "+iif((CPAISLOC) $ ("ANG|PTG"),"Este procedimento deve ser utilizado em modo exclusivo. Faca um backup dos dicionários e da Base de Dados antes da actualização para eventuais falhas de actualização.","Esta rotina deve ser utilizada em modo exclusivo. Faca um backup dos dicionarios e da Base de Dados antes da atualizacao para eventuais falhas de atualizacao."),"Atenção"),(CMSGYESNO := "MsgYesNo", &CMSGYESNO.(iif((CPAISLOC) $ ("ANG|PTG"),"Deseja efectuar a actualização do Dicionário ","Deseja efetuar a atualizacao do Dicionario ")+"v. "+"01/04/2011"+"? "+iif((CPAISLOC) $ ("ANG|PTG"),"Este procedimento deve ser utilizado em modo exclusivo. Faca um backup dos dicionários e da Base de Dados antes da actualização para eventuais falhas de actualização.","Esta rotina deve ser utilizada em modo exclusivo. Faca um backup dos dicionarios e da Base de Dados antes da atualizacao para eventuais falhas de atualizacao."),"Atenção")))

OMAINWND := TWINDOW():NEW(0,0,1,30,iif((CPAISLOC) $ ("ANG|PTG"),"Actualização do Dicionário","Atualizacao do Dicionario"),,,,,,,,,,,,.not. ( .F. ),.not. ( .F. ),.not. ( .F. ),.not. ( .F. ), .F. )


//OMAINWND:ACTIVATE("ICONIZED"OMAINWND:BLCLICKED,OMAINWND:BRCLICKED,OMAINWND:BMOVED,OMAINWND:BRESIZED,OMAINWND:BPAINTED,OMAINWND:BKEYDOWN,OMAINWND:BINIT := { | SELF |iif(LHISTORICO,(PROCESSA({|LEND|CDVPROC(@LEND)},iif((CPAISLOC) $ ("ANG|PTG"),"A processar","Processando"),iif((CPAISLOC) $ ("ANG|PTG"),"Aguarde, a processar preparação dos ficheiros","Aguarde, processando preparacao dos arquivos"), .F. ), OMAINWND:END()),OMAINWND:END())},OMAINWND:BLBUTTONUP)

return 



















User function CDVX3FIELD(CFIELD,CSX3FIELD,UNEWVALUE,UTESTVALUE,BBLOCKVALUE)
return CDVUPDFIELD("SX3",2,CFIELD,CSX3FIELD,UNEWVALUE,UTESTVALUE,BBLOCKVALUE)























User function CDVXFIELD(CALIAS,CINDEXKEY,CFIELD,UNEWVALUE,UTESTVALUE,BBLOCKVALUE)
return CDVUPDFIELD(CALIAS,1,CINDEXKEY,CFIELD,UNEWVALUE,UTESTVALUE,BBLOCKVALUE)

User function CDVUPDFIELD(CALIAS,NORDER,CINDEXKEY,CFIELD,UNEWVALUE,UTESTVALUE,BBLOCKVALUE)
local AAREA := (CALIAS)->(GETAREA())
local LRET :=  .F. 
local NFIELDPOS := 0
local ASTRUCT := {}
local NPOSFIELD := 0
local UVALUEFIELD := 0

dbselectarea(CALIAS)
CALIAS->(dbsetorder(NORDER))


if .not. (CALIAS->(dbseek(CINDEXKEY)))
    RESTAREA(AAREA)
    return LRET
endif


NFIELDPOS := CALIAS->(fieldpos(CFIELD))

if NFIELDPOS==0
    RESTAREA(AAREA)
    return LRET
endif

ASTRUCT := CALIAS->(dbstruct())
NPOSFIELD := ascan(ASTRUCT,{|AFIELD| alltrim( upper(AFIELD[1]))== alltrim( upper(CFIELD))})
UVALUEFIELD := (CALIAS)->(fieldget(NFIELDPOS))

if BBLOCKVALUE==NIL


    if UTESTVALUE==NIL

        if NPOSFIELD>0
            if ASTRUCT[NPOSFIELD][2]=="C"
                UVALUEFIELD :=  alltrim(UVALUEFIELD)
                UTESTVALUE :=  alltrim(UNEWVALUE)
            endif
        endif


        LRET := .not. (UVALUEFIELD==UTESTVALUE)

        if LRET
            RECLOCK(CALIAS, .F. )
            CALIAS->(fieldput(NFIELDPOS,UNEWVALUE))
            MSUNLOCK()
        endif

        RESTAREA(AAREA)
    else 


        if NPOSFIELD>0

            if ASTRUCT[NPOSFIELD][2]=="C"
                UVALUEFIELD :=  alltrim( upper(UVALUEFIELD))
                UTESTVALUE :=  alltrim( upper(UTESTVALUE))
            endif
        endif


        if UTESTVALUE==UVALUEFIELD
            RECLOCK(CALIAS, .F. )
            CALIAS->(fieldput(NFIELDPOS,UNEWVALUE))
            MSUNLOCK()

            RESTAREA(AAREA)
            LRET :=  .T. 
        endif
    endif
endif



RESTAREA(AAREA)
return LRET

User function UPDCDV()
UPDRNCDV()
return 














static function CDVOPENSM0(LSHARED)
local LOPEN :=  .F. 
local I := 0

for I := 1 to (20) step 1

    dbusearea( .T. ,,"SIGAMAT.EMP","SM0",LSHARED, .F. )

    if .not. (empty(select("SM0")))
        LOPEN :=  .T. 
        dbsetindex("SIGAMAT.IND")
        exit 
    endif
    sleep(500)
next

return LOPEN














static function ADMABRESM0()
local AAREA := (SM0)->(GETAREA())
local AAUX := {}
local ARETSM0 := {}
local LFWLOADSM0 := FindFunction("FWLoadSM0")
local LFWCODFILSM0 := FindFunction("FWCodFil")

if LFWLOADSM0
    ARETSM0 := FWLOADSM0()
else 
    dbselectarea("SM0")
    SM0->(dbgotop())
    while SM0->(.not. (eof())) 






        AAUX := {SM0->M0_CODIGO,iif(LFWCODFILSM0,iif(FindFunction("FWCODFIL"),FWCODFIL(),SM0->M0_CODFIL),SM0->M0_CODFIL),"","","",SM0->M0_NOME,SM0->M0_FILIAL}

        aadd(ARETSM0,aclone(AAUX))
        SM0->(dbskip())
		
		endDo
endif


RESTAREA(AAREA)
return ARETSM0














static function GETTAMSXG(CGRUPO,NTAMPAD)
local ARET

dbselectarea("SXG")
SXG->(dbsetorder(1))
if SXG->(dbseek(CGRUPO))
    NTAMPAD := GetSx3Cache(CGRUPO, 'X3_TAMANHO')
    ARET := {NTAMPAD,"@!",NTAMPAD,NTAMPAD}
else 
    ARET := {NTAMPAD,"@!",NTAMPAD,NTAMPAD}
endif

return ARET



















































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































