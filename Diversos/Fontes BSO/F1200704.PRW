#INCLUDE 'PROTHEUS.CH'
#DEFINE	 RECSOLICIT	01	//RECNO da SC
#DEFINE	 FILSOLICIT	02	//Filial da SC
#DEFINE	 NUMSOLICIT	03	//Numero da SC
#DEFINE	 ITMSOLICIT	04	//Item da SC
#DEFINE	 PRDSOLICIT	05	//Produto
#DEFINE	 DESSOLICIT	06	//Descrição produto
#DEFINE	 QTDSOLICIT	07	//Quantidade
#DEFINE	 PRCSOLICIT	08	//Preço total
#DEFINE	 VLTOTSOLIC	09	//Valor total
#DEFINE	 LOCALSOLIC	10	//Local de estoque
#DEFINE	 EMISSSOLIC	11	//Emissao
#DEFINE	 FORNCSOLIC	12	//Fornecedor
#DEFINE	 LOJAFSOLIC	13	//Loja do fornecedor
#DEFINE	 GRPCOSOLIC	14	//Grupo de compras
#DEFINE	 OBSERSOLIC	15	//Observações
#DEFINE	 VLUNISOLIC	16	//Valor unitario
#DEFINE	 CCUSTSOLIC	17	//Centro de custo
#DEFINE	 XTIPOSOLIC	18	//Tipo de solicitacao
#DEFINE	 FLGGCSOLIC	19	//Flag da solicitacao
#DEFINE	 CONTASOLIC	20	//Conta contabil
#DEFINE	 ITEMCSOLIC	21	//Item contabil
#DEFINE	 CLASSSOLIC	22	//Classe de valor
#DEFINE	 QTDAGSOLIC 23	//Quantidade aglutinada
#DEFINE	 VLRAGSOLIC 24	//Valor aglutinado
#DEFINE	 IDINTSOLIC 25	//ID de integração
#DEFINE	 FLAGGSOLIC 26  //Flag GCT
#DEFINE	 STATMSOLIC 27	//Status da medição
#DEFINE	 OBSMDSOLIC 28	//Observacoes da medição
#DEFINE	 NUMMDSOLIC 29	//Numero da medição
#DEFINE	 ITMMDSOLIC	30	//Item da medição
#DEFINE	 ORMEDSOLIC	31	//Origem da medição
#DEFINE	 DTMEDSOLIC	32	//Data da medição
#DEFINE	 HRMEDSOLIC	33	//Hora da medição
#DEFINE	 FILCTSOLIC	34	//Filial do contrato
#DEFINE	 CONTRSOLIC	35	//Numero do contrato
#DEFINE  RVCTRSOLIC	36	//Revisao do contrato
#DEFINE	 DINCTSOLIC	37	//Data inicial do contrato
#DEFINE	 DFICTSOLIC	38	//Data final do contrato
#DEFINE	 VGCTRSOLIC 39	//Vigencia do contrato
#DEFINE	 NUMPCSOLIC	40	//Num do PC
#DEFINE	 ITMPCSOLIC	41	//Item do PC
#DEFINE	 USERCSOLIC	42	//Código do usuário
#DEFINE	 SETORSOLIC 43  //Setor
#DEFINE	 MOTIVSOLIC 44  //Motivo
#DEFINE	 CHAVESOLIC	45	//Filial + Produto + Local de Estoque + Centro de Custo
#DEFINE	 JAUSESOLIC	46	//já em uso
#DEFINE	 DATAPSOLIC	47	//Data planejada
/*/{Protheus.doc} F1200704
	
	Agrupa Itens de Solicitações de Compras selecionadas.

	@type Function - User function
	@author 	Paulo Krüger
	@since 		17/08/2017
	@version 	P12.7
	@Obs: MAN0000007423046

/*/
User Function F1200704()
	Local cId           := ''                                  as character
	Local cTpSoc        := SuperGetMv("FS_XTPNASC", .F., "11") as character // Tipos de SC que não serão aglutinados no processo de OPME
	Local nI            := ''                                  as character
	Local nPos          := 0                                   as numeric

	if !(ISINCALLSTACK('U_F1200600'))
		nI   := 0
		ASORT(aProdSel,,, { |x, y| x[3]+x[4] < y[3]+y[4] })
		For nI := 01 To Len(aProdSel)
			if (aProdSel[nI][XTIPOSOLIC] $ cTpSoc)

				nPos2 := ASCAN(aAgrup, {|aVal| aVal[10] == aProdSel[nI][NUMSOLICIT]})
				if nPos2 == 0
					cId	:=	FWUUIDV4()
				Else
					cId := aAgrup[nPos2][01] 
				Endif

				Aadd(aAgrup,{	cId													,	;	//[01]Id de Integração
				aProdSel[nI][NUMSOLICIT]+aProdSel[nI][ITMSOLICIT]	,	;	//[02]Filial + Produto + Local + Centro de custo
				aProdSel[nI][QTDSOLICIT]							,	;	//[03]Quantidade  (aglutinada)
				aProdSel[nI][PRCSOLICIT]							,	;	//[04]Preço Total (aglutinado)
				aProdSel[nI][FILSOLICIT]							,	;	//[05]Filial da SC
				aProdSel[nI][PRDSOLICIT]							,	;	//[06]Produto
				aProdSel[nI][LOCALSOLIC]							,	;	//[07]Local de estoque
				aProdSel[nI][CCUSTSOLIC]    						,   ;	//[08]Centro de custo
				aProdSel[nI][XTIPOSOLIC]							,	;   //[09]Tipo de Solicitacao
				aProdSel[nI][NUMSOLICIT]    						,	;   //[10]Numero da Solicitacao
				aProdSel[nI][ITMSOLICIT]							,	;   //[11]Item da Solicitacao
				DToC(aProdSel[nI][DATAPSOLIC])})							//[12]Item da Solicitacao

				aProdSel[nI][IDINTSOLIC] := cId
				aProdSel[nI][CHAVESOLIC] := aProdSel[nI][NUMSOLICIT]+aProdSel[nI][ITMSOLICIT]
				aProdSel[nI][QTDAGSOLIC] := aProdSel[nI][QTDSOLICIT]
				aProdSel[nI][VLRAGSOLIC] := aProdSel[nI][PRCSOLICIT]

				nPos2 := 0
				cId   := ""
			Endif
		Next nI
	EndIF

//Ordena Itens selecionados pela chave: Filial + Produto + Local de Estoque + Centro de Custo
	If !Empty(aProdSel)
		ASORT(aProdSel,,, { |x, y| x[CHAVESOLIC] < y[CHAVESOLIC] })
		//Agrupa itens
		For nI := 01 To Len(aProdSel)

			if !(aProdSel[nI][XTIPOSOLIC] $ cTpSoc) 
				nPos := ASCAN(aAgrup, {|aVal| aVal[02] == aProdSel[nI][CHAVESOLIC]})
				If nPos == 0
					cId	:=	FWUUIDV4()
					Aadd(aAgrup,{	cId							,	;	//[01]Id de Integração
					aProdSel[nI][CHAVESOLIC]	,	;	//[02]Filial + Produto + Local + Centro de custo
					aProdSel[nI][QTDSOLICIT]	,	;	//[03]Quantidade  (aglutinada)
					aProdSel[nI][PRCSOLICIT]	,	;	//[04]Preço Total (aglutinado)
					aProdSel[nI][FILSOLICIT]	,	;	//[05]Filial da SC
					aProdSel[nI][PRDSOLICIT]	,	;	//[06]Produto
					aProdSel[nI][LOCALSOLIC]	,	;	//[07]Local de estoque
					aProdSel[nI][CCUSTSOLIC]    ,   ;	//[08]Centro de custo
					aProdSel[nI][XTIPOSOLIC]	,	;   //[09]Tipo de Solicitacao
					aProdSel[nI][NUMSOLICIT]    ,	;   //[10]Numero da Solicitacao
					aProdSel[nI][ITMSOLICIT]    ,	;   //[11]Item da Solicitacao
					DToC(aProdSel[nI][DATAPSOLIC])})	//[12]Item da Solicitacao

					aProdSel[nI][IDINTSOLIC] := cId
				Else
					aAgrup[nPos][03] += aProdSel[nI][QTDSOLICIT]
					aAgrup[nPos][04] += (aProdSel[nI][QTDSOLICIT] * aProdSel[nI][PRCSOLICIT])

					aProdSel[nI][IDINTSOLIC] := aAgrup[nPos][01] //Id
				EndIf
			EndIf
		Next nI
	EndIf

	ASORT(aAgrup  ,,, { |x, y| x[02] < y[02] })
	ASORT(aProdSel,,, { |x, y| x[CHAVESOLIC] < y[CHAVESOLIC] })

	For nI := 01 To Len(aAgrup)
		if !(aAgrup[nI][09] $ cTpSoc) 
			nPos := ASCAN(aProdSel, {|aVal| aVal[CHAVESOLIC] == aAgrup[nI][02]})
			While aProdSel[nPos][CHAVESOLIC] == aAgrup[nI][02]

				aProdSel[nPos][QTDAGSOLIC] := aAgrup[nI][03]
				aProdSel[nPos][VLRAGSOLIC] := aAgrup[nI][04]

				If nPos < Len(aProdSel)
					nPos := nPos + 01
				Else
					Exit
				EndIf
			EndDo
		EndIf
	Next nI

Return
